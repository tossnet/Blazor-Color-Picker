@page "/"
@using BlazorColorPicker

@inject IColorPickerService ColorPickerService

<a href="https://www.nuget.org/packages/BlazorColorPicker/"><img src="https://img.shields.io/nuget/v/BlazorColorPicker.svg" /></a>
<br />

<button class="btn btn-primary" @onclick="OpenModal">
    <div style="background-color:@color" class="buttonColor"></div> Select a default Color
</button>

<button class="btn btn-primary" @onclick="OpenModalCustom">
    <div style="background-color:@customColor" class="buttonColor"></div> Select a custom Color
</button>


<button class="btn btn-primary" @onclick="OpenModalCustomSizes">
    <div style="background-color:@customColorSize" class="buttonColor"></div> Custom sizes
</button>

              
@code {
	private string color = "#F1F7E9";
	private string customColor = "#FFFFFF";
	private string customColorSize = "#42A5F6";

	private async Task OpenModal()
	{
		var parameters = new ColorPickerParameters
		{
			ColorSelected = color,
		};
		color = await ColorPickerService.ShowColorPicker(parameters);
	}

	private async Task OpenModalCustom()
	{
		string[] colors = new string[] { "#FFFFFF", "#000000", "#999999", "#03A97E", "#04B573",
			"#05BF69", "#06CA5F", "#06D554", "#07E148", "#08EC3E" };

		var parameters = new ColorPickerParameters
		{
			ColorSelected = customColor,
			MyColorPallet = colors,
			OverwriteBackgroundColor = "#CCCCCC",
			Title = "Custom Colors",
		};
		customColor = await ColorPickerService.ShowColorPicker(parameters);
    }

	private async Task OpenModalCustomSizes()
	{
		var parameters = new ColorPickerParameters
		{
			ColorSelected = customColorSize,
			Style = "width: 304px; height: 304px",
		};
		customColorSize = await ColorPickerService.ShowColorPicker(parameters);
	} 
}
